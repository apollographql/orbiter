[build]
  command = "npm run build"
  functions = "./dist/functions"

[dev]
  autoLaunch = false

# Netlify's functions are invoked at `/.netlify/functions/fn-name`, which is
# definitely not ideal, and we'd like to also hide the provider (netlify) in the
# url. This adds a 200 proxy from `/fn-name` to `/.netlify/functions/fn-name`
[[redirects]]
  from = "/tar/*"
  to = "/.netlify/functions/tar"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}

[[redirects]]
  from = "/win/*"
  to = "/.netlify/functions/install-rover"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}

[[redirects]]
  from = "/nix/*"
  to = "/.netlify/functions/install-rover"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}

[[redirects]]
  from = "/plugins/*"
  to = "/.netlify/functions/install-plugin"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}

[[redirects]]
  from = "/telemetry"
  to = "/.netlify/functions/telemetry"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}

[[redirects]]
  from = "/legacy-cli/*"
  to = "/.netlify/functions/legacy-cli"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}
  
[[redirects]]
  from = "/"
  to = "https://www.apollographql.com/docs/rover"

  status = 302

[[redirects]]
  from = "/quickstart"
  to = "https://www.apollographql.com/docs/federation/quickstart"

  headers = {Apollo-Proxy-Rule = "from-root-config"}

[[redirects]]
  from = "/quickstart/products/graphql"
  to = "https://7bssbnldib.execute-api.us-east-1.amazonaws.com/Prod/graphql"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}

[[redirects]]
  from = "/quickstart/reviews/graphql"
  to = "https://w0jtezo2pa.execute-api.us-east-1.amazonaws.com/Prod/graphql"

  # Proxy / rewrite transparently without the `location` hop.
  status = 200

  # Always redirect, even if somehow some content exists at the root "from"
  force = true

  headers = {Apollo-Proxy-Rule = "from-root-config"}
